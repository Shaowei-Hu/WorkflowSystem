<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd ">

	<!-- work with Spring Annotation -->
	<context:annotation-config />

	<!-- set the location where Spring can find the entities Annotation -->
	<context:component-scan
		base-package="com.shaowei.workflow.model, com.shaowei.workflow.dao, com.shaowei.workflow.service, com.shaowei.*" />


	<!-- users for test user -->

	<bean id="rootAdmin" name="rootAdmin" class="com.shaowei.workflow.model.User">
		<property name="userName" value="RootAdmin"></property>
		<property name="userPassword" value="initial"></property>
		<property name="userId" value="10"></property>
		<property name="job" value="RootAdmin"></property>
	</bean>
	
	<bean id="notExisteUser" name="notExisteUser" class="com.shaowei.workflow.model.User">
		<property name="userName" value="Julien"></property>
		<property name="userPassword" value="initial"></property>
	</bean>
	
	<bean id="faultPassword" name="faultPassword" class="com.shaowei.workflow.model.User">
		<property name="userName" value="rootAdmin"></property>
		<property name="userPassword" value="1235678"></property>
	</bean>
	
	<bean id="newUser" name="newUser" class="com.shaowei.workflow.model.User">
		<property name="userName" value="NewUser4Test"></property>
		<property name="userPassword" value="initial"></property>
		<property name="job" value="UserTest"></property>
		<!-- <property name="userId" value="12"></property> -->
	</bean>	
	
	


	
	<!-- decisions for test document -->
	<bean id="decision1" name="decision1" class="com.shaowei.workflow.model.Decision">
		<property name="decisionId" value="1"></property>
		<property name="destinationId" value="3"></property>
		<property name="comment" value="Send to responsible"></property>
	</bean>	
	<bean id="decision2" name="decision2" class="com.shaowei.workflow.model.Decision">
		<property name="decisionId" value="8"></property>
		<property name="destinationId" value="1"></property>
		<property name="comment" value="Return to trader"></property>
	</bean>	
	<bean id="decision3" name="decision3" class="com.shaowei.workflow.model.Decision">
		<property name="decisionId" value="1"></property>
		<property name="destinationId" value="3"></property>
		<property name="comment" value="Resend to responsible"></property>
	</bean>	
	<bean id="decision4" name="decision4" class="com.shaowei.workflow.model.Decision">
		<property name="decisionId" value="2"></property>
		<property name="destinationId" value="5"></property>
		<property name="comment" value="Send to risk control officer"></property>
	</bean>	
	<bean id="decision5" name="decision5" class="com.shaowei.workflow.model.Decision">
		<property name="decisionId" value="3"></property>
		<property name="destinationId" value="8"></property>
		<property name="comment" value="Send to backoffice"></property>
	</bean>	
	<bean id="decision6" name="decision6" class="com.shaowei.workflow.model.Decision">
		<property name="decisionId" value="6"></property>
		<property name="destinationId" value="4"></property>
		<property name="comment" value="Return to another risk control officer"></property>
	</bean>
	<bean id="decision7" name="decision7" class="com.shaowei.workflow.model.Decision">
		<property name="decisionId" value="3"></property>
		<property name="destinationId" value="8"></property>
		<property name="comment" value="Resend to backoffice"></property>
	</bean>	
	<bean id="decision8" name="decision8" class="com.shaowei.workflow.model.Decision">
		<property name="decisionId" value="4"></property>
		<property name="destinationId" value="2"></property>
		<property name="comment" value="Debloger"></property>
	</bean>	
	
	
	
	<!-- document for test -->
	<bean id="document4test" name="document4test" class="com.shaowei.workflow.model.Document">
		<property name="client" value="TestDocument"></property>
		<property name="amountSt" value="10000"></property>
		<property name="resourceSt" value="800"></property>
	</bean>	




	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/project_workflow_test" />
		<property name="username" value="root" />
		<property name="password" value="admin" />

		<!-- the initial number of the connections -->
		<property name="initialSize" value="1" />

		<!-- until minIdle some new connections will be demanded -->
		<property name="minIdle" value="1" />

		<!-- the max value of the connections -->
		<property name="maxActive" value="100" />

		<!-- after a pick some connections in the pool can be released, until the 
			maxIdle -->
		<property name="maxIdle" value="20" />

		<property name="maxWait" value="1000" />
	</bean>



	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="annotatedClasses"> <list> <value>User</value> <value>BaseDao</value> 
			<value>UserDao</value> </list> </property> -->

		<property name="packagesToScan">
			<array>
				<value>com.shaowei.workflow.model</value>
				<value>com.shaowei.authorization.domain</value>
			</array>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<!-- <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegion</prop> -->
			</props>
		</property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="documentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.shaowei.workflow.dao.DocumentMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.shaowei.workflow.dao.UserMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="workflowMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.shaowei.workflow.dao.WorkflowMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>


</beans>